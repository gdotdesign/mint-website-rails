- set_meta_tags title: 'Guide / Reference / Literals'

%h1 Literals

%p
  Fixed values such as
  %cpde Numbers
  :plain
    ,
  %code Strings
  and
  %code Booleans
  are called literals, this
  page goes through all literal types in the language.

%h2 Bool

%p
  Represents the

  = succeed "." do
    %a(href="https://en.wikipedia.org/wiki/Boolean_data_type") Boolean type

  It has two possible values

  %code true

  and

  = succeed "." do
    %code false

%pre
  %code
    :plain
      true
      false

%h2 Number

%p
  Represents the
  %a(href="https://developer.mozilla.org/en-US/docs/Glossary/Number")
    Number type
  from JavaScript.

%pre
  %code
    :plain
      3.14
      42
      -10

%p.hint.hint--info
  = octicon "info"
  %span
    Currently there is no support for other representations such as hex or binary.

%h2 String

%p
  Represents the
  %a(href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String")
    String type
  from JavaScript.

%pre
  %code
    :plain
      "hello world"

%p
  String concatenation works the same as in JavaScript:

%pre
  %code
    :plain
      "hello" + " world"

%p
  Escaping works as in JavaScript:

%pre
  %code
    :plain
      "hello \"world\""

%p
  Strings can span multiple lines:

%pre
  %code
    :plain
      "hello
      world"

%p
  And can be split into smaller consecutive parts:

%pre
  %code
    :plain
      "hello " \
      "world" == "hello world"

%p
  Expressions can be interpolated in a string with the
  %code \#{...}
  syntax:

%pre
  %code
    :plain
      let name = "Joe"

      "Hello \#{name}" /* Hello Joe */
