- set_meta_tags title: 'Guide / Reference / Tuples'

%h1 Tuples

%p
  Tuple is a data structure which contains a fixed set values, where each
  value can have a different type.

%ul
  %li they are useful when you don't want to declare a record
  %li they can contain any number of items
  %li their items can be destuctured and matched against

%h2 Type

%p
  The type of a tuple is
  %code Tuple(...)
  where each parameter is an item of a tuple.

%p
  For example the type
  %code Tuple(String, Number, Bool)
  represents a tuple where the first element is a
  %code String
  the second is a
  %code Number
  the third is a
  %code Bool

%h2 Syntax

%p
  Tuples can be created with the following syntax:

%pre
  %code
    :escaped
      {"First Value", 10, true}

%h2 Destructuring

%p
  To get the items of a tuple we need to destructure it: assign each item to a
  variable:

%pre
  %code
    :escaped
      let {first, second, third} =
        {"First Value", 10, true}

%p
  Destructuring can be used in
  %code statements
  and
  %code case
  expressions.

%pre
  %code
    :escaped
      case ({"First Value", 10, true}) {
        /* match by value (will not match) */
        {"A", 0, false} => "A"

        /* match by value (will match) */
        {"First Value", 10, true} => "B"

        /* destructure */
        {a, b, c} => a
      }

      fun tuples : String {
        let {first, second, third} =
          {"First Value", 10, true}

        first
      }

%p
  When matching tuples in a case expression a destructuring will make it
  exhaustive.
